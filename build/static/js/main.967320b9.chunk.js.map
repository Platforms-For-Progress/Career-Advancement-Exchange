{"version":3,"sources":["img/CAEResize.png","Pages/Asset 2.png","logo.svg","base.js","Components/Login.jsx","Components/SignUp.jsx","Components/Upload.jsx","Pages/Loading.jsx","Pages/Links.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","getAuth","getDatabase","db","usersCollection","collection","addUser","_ref","_asyncToGenerator","_callee","userId","email","admin_status","_context","setDoc","doc","_x","_x2","_x3","_x4","apply","arguments","getUser","_ref2","_callee2","docRef","docSnap","_context2","getDoc","exists","_objectSpread","id","data","_x5","getUsers","_ref3","_callee3","querySnapshot","_context3","getDocs","query","docs","map","getAdmins","_ref4","_callee4","_context4","where","getAdminStatus","_ref5","_callee5","userDoc","userSnap","_context5","_x6","changeAdminStatus","_ref6","_callee6","_context6","merge","_x7","_x8","requestsCollection","_ref7","_callee7","user_id","request_data","status","admin_ids","_context7","addDoc","_ref8","_callee8","requestId","_context8","_ref9","_callee9","_context9","_ref10","_callee10","admin_id","_context10","includes","_ref11","_callee11","_context11","splice","indexOf","getFirestoreObject","getFirestore","connectFirestoreEmulator","getCustomFirestore","getStorage","getAnalytics","GoogleAuthProvider","setCustomParameters","prompt","Input","TextArea","Upload","Loading","React","createElement","className","onClick","window","location","href","Links","src","image","alt","class","BsTiktok","App","useEffect","onpageshow","event","persisted","reload","Router","path","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.967320b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CAEResize.7d5e2f93.png\";","module.exports = __webpack_public_path__ + \"static/media/Asset 2.b2974bef.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport {\n  connectAuthEmulator,\n  getAuth,\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport { connectDatabaseEmulator, getDatabase } from \"firebase/database\";\nimport {\n  getFirestore,\n  collection,\n  doc,\n  setDoc,\n  getDoc,\n  getDocs,\n  query,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\nimport { GoogleAuthProvider } from \"firebase/auth\";\nimport { connectFirestoreEmulator } from \"firebase/firestore\";\n\n// https://firebase.google.com/docs/web/setup#available-libraries\n\nfunction getCustomAuth() {\n  const auth = getAuth();\n\n  connectAuthEmulator(auth, \"http://127.0.0.1:9099/\", {\n    disableWarnings: true,\n  });\n\n  return auth;\n}\n\nfunction getCustomFirestore() {\n  const db = getFirestore();\n  connectFirestoreEmulator(db, \"localhost\", 8081);\n  return db;\n}\n\nfunction getFirestoreObject(db) {\n  // Create users collection\n  const usersCollection = collection(db, \"users\");\n  const addUser = async (userId, email, name, admin_status) => {\n    await setDoc(doc(usersCollection, userId), {\n      email,\n      name,\n      admin_status,\n    });\n  };\n  const getUser = async (userId) => {\n    const docRef = doc(usersCollection, userId);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n      return { id: docSnap.id, ...docSnap.data() };\n    } else {\n      return null;\n    }\n  };\n  const getUsers = async () => {\n    const querySnapshot = await getDocs(query(usersCollection));\n    return querySnapshot.docs.map((doc) => {\n      return { id: doc.id, ...doc.data() };\n    });\n  };\n\n  const getAdmins = async () => {\n    const querySnapshot = await getDocs(\n      query(usersCollection, where(\"admin_status\", \">=\", 1))\n    );\n    return querySnapshot.docs.map((doc) => {\n      return { id: doc.id, ...doc.data() };\n    });\n  };\n\n  const getAdminStatus = async (userId) => {\n    const userDoc = doc(usersCollection, userId);\n    const userSnap = await getDoc(userDoc);\n    if (userSnap.exists()) {\n      return userSnap.data().admin_status;\n    } else {\n      return 0;\n    }\n  };\n\n  const changeAdminStatus = async (userId, admin_status) => {\n    const userDoc = doc(usersCollection, userId);\n    await setDoc(userDoc, { admin_status }, { merge: true });\n  };\n\n  // Create requests collection\n  const requestsCollection = collection(db, \"requests\");\n  const addRequest = async (user_id, request_data, status, admin_ids) => {\n    const doc = await addDoc(requestsCollection, {\n      user_id,\n      request_data,\n      status,\n      admin_ids,\n    });\n    return doc.id;\n  };\n  const getRequest = async (requestId) => {\n    const docRef = doc(db, \"requests\", requestId);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n      return { id: docSnap.id, ...docSnap.data() };\n    } else {\n      return null;\n    }\n  };\n\n  // querys all requests made by userid\n  const getRequestsByUser = async (userId) => {\n    const querySnapshot = await getDocs(\n      query(requestsCollection, where(\"user_id\", \"==\", userId))\n    );\n    return querySnapshot.docs.map((doc) => {\n      return { id: doc.id, ...doc.data() };\n    });\n  };\n\n  const addRequestAdmin = async (requestId, admin_id) => {\n    const docRef = doc(db, \"requests\", requestId);\n    // add admin_id to array of admin_ids in request\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n      const admin_ids = docSnap.data().admin_ids;\n      if (admin_ids.includes(admin_id)) {\n        return;\n      }\n      admin_ids.push(admin_id);\n      await setDoc(docRef, { admin_ids }, { merge: true });\n    }\n  };\n\n  const removeRequestAdmin = async (requestId, admin_id) => {\n    const docRef = doc(db, \"requests\", requestId);\n    // remove admin_id from array of admin_ids in request\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n      const admin_ids = docSnap.data().admin_ids;\n      if (!admin_ids.includes(admin_id)) {\n        return;\n      }\n      admin_ids.splice(admin_ids.indexOf(admin_id), 1);\n      await setDoc(docRef, { admin_ids }, { merge: true });\n    }\n  };\n\n  // Return an object containing the required collections and documents\n  return {\n    db,\n    usersCollection,\n    getUser,\n    getUsers,\n    getAdmins,\n    addUser,\n    getAdminStatus,\n    changeAdminStatus,\n    requestsCollection,\n    addRequest,\n    getRequest,\n    getRequestsByUser,\n    addRequestAdmin,\n    removeRequestAdmin,\n  };\n}\n\nfunction getCustomDb() {\n  const db = getDatabase();\n  if (window.location.hostname === \"localhost\") {\n    // Point to the RTDB emulator running on localhost.\n    connectDatabaseEmulator(db, \"localhost\", 9000);\n  }\n  return db;\n}\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCP_dzafEk6y0dHK1ZtNUBwqlI2-Xfl-SY\",\n  authDomain: \"platforms-for-progress.firebaseapp.com\",\n  databaseURL: \"https://platforms-for-progress-default-rtdb.firebaseio.com\",\n  projectId: \"platforms-for-progress\",\n  storageBucket: \"platforms-for-progress.appspot.com\",\n  messagingSenderId: \"108726206780\",\n  appId: \"1:108726206780:web:13261fa1a58624801a5e39\",\n  measurementId: \"G-Q341QLSYR4\",\n};\n\n// Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\n\nexport const auth = getAuth();\n// export const auth = getCustomAuth();\n\nexport const db = getDatabase(app);\n// export const db = getCustomDb();\n\n// const firestoreDb = getFirestore(app);\nconst firestoreDb = getCustomFirestore();\nexport const firestore = getFirestoreObject(firestoreDb);\n\nexport const storage = getStorage(app);\n\nconst analytics = getAnalytics(app);\n\n// export const uid = getUser();\n// export const auth = firebase.auth();\n\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n","import { TypeAnimation } from \"react-type-animation\";\nimport { useNavigate } from \"react-router-dom\";\nimport { navigate } from \"@reach/router\";\nimport { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport React from \"react\";\n// import { provider } from '../base';\nimport \"./Login.css\";\nimport { firestore, signInWithGoogle } from \"../base\";\nimport googlelogin from \"./googlelogin\";\nimport { useState } from \"react\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { setDoc, doc, getDoc } from \"firebase/firestore\";\nimport { connectAuthEmulator } from \"firebase/auth\";\nimport { auth } from \"../base\";\n// import {getCustomAuth} from '../base.js'\n// async function getCustomAuth() {\n//   const auth = getAuth();\n//   const authUrl = 'http://localhost:9099';\n//   await fetch(authUrl);\n//   connectAuthEmulator(auth, 'http://127.0.0.1:9099/',  { disableWarnings: true });\n//   return auth;\n\n// };\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onEmailChange = (event) => setEmail(event.target.value);\n  const onPasswordChange = (event) => setPassword(event.target.value);\n\n  onAuthStateChanged(auth, (user) => {\n    if (user) {\n      console.log(user.displayName, \" is signed in\");\n      navigate(\"/profile\");\n      window.location.reload();\n    } else {\n      console.log(\"signed out\");\n    }\n  });\n\n  const navSignUp = () => {\n    navigate(\"/signup\");\n    window.location.reload();\n  };\n\n  const onGoogleLogin = () => {\n    console.log(\"login\");\n    googlelogin();\n  };\n\n  const addUserIfNotExists = async (user) => {\n    const usersCollection = firestore.usersCollection;\n    const userDoc = doc(usersCollection, user.uid);\n    const userDocSnap = await getDoc(userDoc);\n    if (!userDocSnap.exists()) {\n      console.log(\"user doesn't exist in db, adding them\");\n      const split = user.displayName.split(\" \");\n      if (split.length < 2) {\n        alert(\"Please enter your full name in your Google account\");\n        return;\n      }\n      const firstName = split(\" \")[0];\n      const lastName = split(\" \")[1];\n      await firestore.addUser(user.uid, user.email, firstName, lastName, 0);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      console.log(\"email:\", email);\n      await signInWithEmailAndPassword(auth, email, password);\n      console.log(\"user signed in\");\n      // await addUserIfNotExists(auth.currentUser);\n      setEmail(\"\");\n      setPassword(\"\");\n      navigate(\"/profile\");\n      window.location.reload();\n    } catch (error) {\n      console.log(\"there was an error signing in\");\n      setPassword(\"\");\n      alert(error.message);\n    }\n  };\n\n  return (\n    <div className=\"login\">\n      <TypeAnimation\n        sequence={[\n          \"Login\",\n          () => {\n            console.log(\"Done typing!\"); // Place optional callbacks anywhere in the array\n          },\n        ]}\n        wrapper=\"div\"\n        cursor={false}\n        //   repeat={Infinity}\n        style={{ fontSize: \"2em\", cursor: false }}\n      />\n      <div className=\"cont\">\n        <div className=\"section1\">\n          <button onClick={onGoogleLogin}>Login with Google</button>\n        </div>\n        <div className=\"middlecont\">\n          <p>OR</p>\n        </div>\n        <form>\n          <div className=\"formy\">\n            <div class=\"form-group\">\n              <label for=\"exampleInputEmail1\">Email address</label>\n              <input\n                type=\"email\"\n                class=\"form-control\"\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={onEmailChange}\n              ></input>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"exampleInputPassword1\">Password</label>\n              <input\n                type=\"password\"\n                class=\"form-control\"\n                id=\"exampleInputPassword1\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={onPasswordChange}\n              ></input>\n            </div>\n          </div>\n          {/* <br></br> */}\n          <button type=\"submit\" onClick={handleSubmit} class=\"btn btn-primary\">\n            Submit\n          </button>\n          <br></br>\n          <div className=\"add\"></div>\n          <p onClick={navSignUp}>Need to Sign Up? Click Here!</p>\n        </form>\n      </div>\n    </div>\n  );\n};\nexport default Login;\n","import React, { useState } from \"react\";\nimport { PageHeader, Input, Button, Card } from \"antd\";\nimport { Link, navigate } from \"@reach/router\";\nimport { TypeAnimation } from \"react-type-animation\";\n\n// import { app } from \"../base.js\";\n// import \"./Signup.css\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ref, set } from \"firebase/database\";\n// import { getAuth } from \"firebase/auth\";\n// import { getDatabase } from \"firebase/database\";\n// import {app} from \"../base.js\";\nimport { auth, db, firestore } from \"../base.js\";\nimport \"./SignUp.css\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { updateProfile } from \"firebase/auth\";\n\nconst { TextArea } = Input;\n\nconst SignUp = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n\n  const onEmailChange = (event) => setEmail(event.target.value);\n  const onPasswordChange = (event) => setPassword(event.target.value);\n  const onFirstNameChange = (event) => setFirstName(event.target.value);\n  const onLastNameChange = (event) => setLastName(event.target.value);\n\n  const onSignUp = async (e) => {\n    e.preventDefault();\n\n    if (\n      email === \"\" ||\n      password === \"\" ||\n      firstName === \"\" ||\n      lastName === \"\"\n    ) {\n      alert(\"Please fill in all fields\");\n      return;\n    }\n\n    async function onRegister() {\n      try {\n        const userCredential = await createUserWithEmailAndPassword(\n          auth,\n          email,\n          password\n        );\n\n        const user = userCredential.user;\n\n        firestore.addUser(user.uid, user.email, firstName + \" \" + lastName, 0);\n        await updateProfile(auth.currentUser, {\n          displayName: firstName + \" \" + lastName,\n        });\n\n        navigate(\"/login\");\n        window.location.reload();\n      } catch (error) {\n        alert(error.message);\n        return;\n      }\n    }\n    await onRegister();\n  };\n\n  return (\n    <div className=\"signup\">\n      <div className=\"signup_header\">\n        <TypeAnimation\n          sequence={[\n            \"Sign Up\", // Types 'One'\n\n            () => {\n              console.log(\"Done typing!\"); // Place optional callbacks anywhere in the array\n            },\n          ]}\n          wrapper=\"div\"\n          cursor={false}\n          //   repeat={Infinity}\n          style={{ fontSize: \"2em\" }}\n        />\n      </div>\n\n      <br></br>\n      <div className=\"signup_container\">\n        <div className=\"input_container\">\n          <div className=\"input_title\">\n            <h2>First Name</h2>\n          </div>\n          <div className=\"input\">\n            <Input placeholder=\"First Name\" onChange={onFirstNameChange} />\n          </div>\n        </div>\n\n        <div className=\"input_container\">\n          <div className=\"input_title\" style={{ marginTop: \"20px\" }}>\n            <h2>Last Name</h2>\n          </div>\n          <div className=\"input\">\n            <Input placeholder=\"Last Name\" onChange={onLastNameChange} />\n          </div>\n        </div>\n\n        <div className=\"input_container\">\n          <div className=\"input_title\" style={{ marginTop: \"20px\" }}>\n            <h2>Email</h2>\n          </div>\n          <div className=\"input\">\n            <Input placeholder=\"Email\" onChange={onEmailChange} />\n          </div>\n        </div>\n\n        <div className=\"input_container\">\n          <div className=\"input_title\" style={{ marginTop: \"20px\" }}>\n            <h2>Password</h2>\n          </div>\n\n          <div className=\"input\">\n            <Input.Password\n              placeholder=\"Password\"\n              onChange={onPasswordChange}\n            />\n          </div>\n        </div>\n\n        <div style={{ width: \"100%\" }}>\n          <div style={{ float: \"left\" }}>\n            <Link to=\"/sign_in\">Have an account? Sign In</Link>\n          </div>\n\n          <div className=\"input_button\">\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              style={{ marginTop: \"20px\" }}\n              onClick={onSignUp}\n            >\n              Sign Up\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import { useState } from \"react\";\nimport { storage } from \"../base.js\";\nimport {ref as sRef} from \"firebase/database\";\nimport { uploadBytesResumable } from \"firebase/storage\";\nimport { uploadBytes } from \"firebase/storage\";\nimport { getDownloadURL } from \"firebase/storage\";\nimport { getStorage, ref } from \"firebase/storage\";\nimport \"./Upload.css\";\nimport React from \"react\";\nfunction Upload() {\n    const [file, setFile] = useState(\"\");\n    const [percent, setPercent] = useState(0);\n\n    function handleChange(event) {\n        setFile(event.target.files[0]);\n    }\n\n    const handleUpload = () => {\n            if (!file) {\n                alert(\"Please upload a file first!\");\n            }\n                \n                const storageRef = ref(storage, `/files/${file.name}`);\n        \n                const uploadTask = uploadBytesResumable(storageRef, file);\n        \n                uploadTask.on(\n                        \"state_changed\",\n                        (snapshot) => {\n                        const percent = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n            );\n        \n                setPercent(percent);\n        },\n        (err) => console.log(err),\n        () => {\n            getDownloadURL(uploadTask.snapshot.ref).then((url) => {\n                        console.log(url);\n                    });\n                }\n            );\n        };\n        return (\n            <div>\n                <input className=\"buttonlocation\" type=\"file\" onChange={handleChange} />\n                <button className=\"buttonlocation\" onClick={handleUpload}>Upload!</button>\n                <p>{percent} \"% done\"</p>\n            </div>\n            );\n}\nexport default Upload;","import React from \"react\";\nimport './Loading.css';\nconst Loading = () => {\n    const goToLinkedIn = () => {\n        window.location.href = \"https://www.linkedin.com/company/career-advancement-exchange\";\n    }\n    return (\n        // <div className=\"loading scre\">\n        <div className=\"loading\">\n            <h1 onClick={goToLinkedIn}>Coming Soon</h1>\n            {/* <p>Our team is working hard to bring you the best experience possible. Please check back soon!</p> */}\n        </div>\n\n    );\n    }\n\nexport default Loading;","import React from \"react\";\nimport './Links.css';\nimport { BsTiktok } from 'react-icons/bs';\nimport image from './Asset 2.png';\nconst Links = () => {\n    return (\n        \n        <div className=\"links\">\n            {/* <h1>Links</h1> */}\n            <img src={image} alt=\"Logo\" />\n            <h1 className=\"h1\">Career Advancement Exchange</h1>\n            {/* <p className=\"link-ele\" onClick={()=>window.location.href =\"https://forms.gle/eNHYtbormAFV4Cdc7\" }><i class=\"uil uil-comment-info\"></i><a href=\"https://forms.gle/eNHYtbormAFV4Cdc7\">Info Session</a></p> */}\n            <p className=\"link-ele\" onClick={()=>window.location.href =\"https://www.linkedin.com/company/career-advancement-exchange\" }><i class=\"uil uil-linkedin\"></i><a href=\"https://www.linkedin.com/company/career-advancement-exchange\">LinkedIn</a></p>\n            <p className=\"link-ele\" onClick={()=>window.location.href =\"https://www.instagram.com/caexchange/\" }><i class=\"uil uil-instagram\"></i><a href=\"https://www.instagram.com/caexchange/\">Instagram</a></p>\n            <p className=\"link-ele\" onClick={()=>window.location.href =\"https://www.tiktok.com/@caexchange\"}><BsTiktok className=\"FaTiktok\"/><a href=\"https://www.tiktok.com/@caexchange\">TikTok</a></p>\n            \n        </div>\n    \n    );\n}\n\nexport default Links;","\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./Components/Header\";\nimport Home from \"./Components/Home\";\nimport About from \"./Components/About\";\nimport { Router } from \"@reach/router\";\nimport Contact from \"./Components/Contact\";\nimport Involved from \"./Components/Involved\";\nimport PastWork from \"./Components/PastWork\";\nimport Login from \"./Components/Login\";\nimport SignUp from \"./Components/SignUp\";\nimport Profile from \"./Components/Profile\";\nimport Request from \"./Components/Request\";\nimport Internal from \"./Components/Internal\";\nimport Story from \"./Components/Story\";\nimport Edit from \"./Components/Edit\";\nimport { useEffect } from \"react\";\nimport Create from \"./Components/Create\";\nimport Assign from \"./Components/Assign\";\nimport Status from \"./Components/Status\";\nimport Collab from \"./Components/Collab\";\nimport DBDashboard from \"./Components/DBDashboard\";\nimport ViewRequests from \"./Components/ViewRequests\";\nimport ManageAdmin from \"./Components/ManageAdmin\";\nimport Upload from './Components/Upload';\nimport React from 'react';\nimport Loading from './Pages/Loading';\nimport Links from \"./Pages/Links\";\n\nfunction App() {\n  useEffect(() => {\n    window.onpageshow = function (event) {\n      if (event.persisted) {\n        window.location.reload();\n      }\n    };\n  }, []);\n  return (\n    <div className=\"background\">\n      {/* <Header /> */}\n\n      <Router>\n        <Loading path=\"/\" />\n        <Links path=\"/links\" />\n        {/* <Home path=\"/home\" default />\n        <About path=\"/about\" />\n        <Contact path=\"/contact\" />\n        <Involved path=\"/involved\" />\n        <PastWork path=\"/pastwork\" />\n        <Login path=\"/login\" />\n        <SignUp path=\"/signup\" />\n        <Profile path=\"/profile\" />\n        <Request path=\"/request/\" />\n        <Internal path=\"/internal\" />\n        <Create path=\"/create\" />\n        <Status path=\"/status/:rid\" />\n        <Assign path=\"/assign/:rid\" />\n        <Edit path=\"/edit/:rid\" />\n        <Story path=\"/story/:rid\" />\n        <Collab path=\"/collab/:rid\" />\n        <DBDashboard path=\"/dbdashboard\" />\n        <ViewRequests path=\"/request/:uid\" />\n        <ManageAdmin path=\"/manageadmin\" />\n        <Upload path=\"/upload\"/> */}\n\n      </Router>\n      {/* <p>Hello Mate</p> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}